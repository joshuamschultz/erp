
<% unless @so_line.new_record? %>

    <div class="row-fluid">

        <div class="span3 well item_detail_view">
            <%= render :partial => 'so_headers/so_header_info' %>
        </div>

        <div class="span4 well">
            <%= simple_form_for([@so_header, @so_line], :html => {:id => "form_for_so_line",:class => "form-horizontal"}) do |f| %>
                <%= f.error_notification %>     

                <%= f.association :item_alt_name, :url => autocomplete_item_alt_name_item_alt_identifier_item_alt_names_path(organization_id: @so_header.organization.id), :as => :autocomplete, :id_element => '#alt_name_id', required: true, :label => "Item" %>

                <%= hidden_field_tag :alt_name_id, (@so_line.item_alt_name.id if @so_line.item_alt_name) %>

                <%= hidden_field_tag :org_alt_name_id, (@so_line.item_alt_name.id if @so_line.item_alt_name) %>

                <% @item_revisions = ((@so_line.persisted? && @so_line.item.present?) ? @so_line.item.item_revisions : "") %>
                <% selected_item_revision = ((@so_line.persisted? && @so_line.item_revision.present?) ? @so_line.item_revision : "") %>

                <div class="control-group select required quality_lot_po_line">
                    <label for="so_line_item_revision_id" class="select required control-label">
                        <abbr title="required">*</abbr> Revision
                    </label>
                    <div class="controls">
                        <select name="so_line[item_revision_id]" id="so_line_item_revision_id" class="select required" autofocus="autofocus">

                    </select>
                    </div>
                </div>            

                <%= f.input :so_line_cost, :label => "Cost" %>     

                <%= f.input :so_line_sell, :label => "Sell" %>        

                <%= f.input :so_line_quantity, :label => "Quantity" %>
                
                <%#= f.input :so_line_freight, :label => "Freight Charge" %>

                <%= f.association :organization, :url => autocomplete_organization_organization_name_organizations_path(type: "vendor"), :as => :autocomplete, :id_element => '#organization_id', :label => "Vendor" %>

                <%= hidden_field_tag :organization_id, (@so_line.organization.id if @so_line.organization) %>

                <%= hidden_field_tag :org_organization_id, (@so_line.organization.id if @so_line.organization) %>
    <!-- 
                <div id="group_div" style="padding-bottom:20px;">
                    <div class="control-group">
                        <label for="quote_vendors" class="optional control-label">Choose Item</label>
                        <div class="controls">
                            <select name="quote_item" id="quote_item">
                                <option value=""></option>
                            </select>
                            <%#= select_tag :quote_item, options_for_select([[ , ""] ])%>
                        </div>
                    </div>
                </div> -->

            <div class="control-group autocomplete required so_line_po">
                <label for="so_line_item_alt_name_id" class="autocomplete required control-label">
                    <abbr title="required"></abbr> Vendor po
                </label>
                <div class="controls">
                    <span role="status" aria-live="polite" class="ui-helper-hidden-accessible"></span>
                    <input type="text" size="30"  name="so_line[po]" id="so_line_po" data-id-element="#so_line_po"  class="autocomplete required ui-autocomplete-input" autocomplete="off"></div>
            </div>
            <%= hidden_field_tag :po_header_id, (@so_line.po_header.id if @so_line.po_header) %>

            <%= hidden_field_tag :org_po_header_id, (@so_line.po_header.id if @so_line.po_header) %>

                <%= f.input :so_line_notes, :label => "Notes" %>

                <%= f.input :so_line_price, :label => "Total", :disabled => true, input_html: { class: 'special_font' }, :as => :hidden %>

                <div class="separator bottom"></div>
          
                <div class="actions">
                    <%= f.submit "ADD", :class =>"btn" %>
                    <%= link_to 'Delete', so_header_so_line_path(@so_header, @so_line), method: :delete, data: { confirm: 'Are you sure?' }, :class => "btn" unless @so_line.new_record? %>
                    <%= link_to 'SAVE', so_header_path(@so_header), :class =>"btn" %>
               </div>
            <% end %>
        </div>
    </div>

    <div class="separator bottom"></div>

    <%= render :partial => 'so_lines/line_items' %>


<% else %>
    <div class="row-fluid">



        <div class="span4 well">
            <%= simple_form_for([@so_header, @so_line], :html => {:id => "form_for_so_line",:class => "form-horizontal"}) do |f| %>
                <%= f.error_notification %>     

                <%= f.association :item_alt_name, :url => autocomplete_item_alt_name_item_alt_identifier_item_alt_names_path(organization_id: @so_header.organization.id), :as => :autocomplete, :id_element => '#alt_name_id', required: true, :label => "Item" %>

                <%= hidden_field_tag :alt_name_id, (@so_line.item_alt_name.id if @so_line.item_alt_name) %>

                <%= hidden_field_tag :org_alt_name_id, (@so_line.item_alt_name.id if @so_line.item_alt_name) %>

                
                <div class="control-group select required quality_lot_po_line">
                    <label for="so_line_item_revision_id" class="select required control-label">
                        <abbr title="required">*</abbr> Revision
                    </label>
                    <div class="controls">
                        <select name="so_line[item_revision_id]" id="so_line_item_revision_id" class="select required" autofocus="autofocus">

                    </select>
                    </div>
                </div>    
                <%= f.input :so_line_cost, :label => "Cost" %>     

                <%= f.input :so_line_sell, :label => "Sell" %>        

                <%= f.input :so_line_quantity, :label => "Quantity" %>
                
                <%#= f.input :so_line_freight, :label => "Freight Charge" %>

                <%= f.association :organization, :url => autocomplete_organization_organization_name_organizations_path(type: "vendor"), :as => :autocomplete, :id_element => '#organization_id', :label => "Vendor" %>

                <%= hidden_field_tag :organization_id, (@so_line.organization.id if @so_line.organization) %>

                <%= hidden_field_tag :org_organization_id, (@so_line.organization.id if @so_line.organization) %>
    <!-- 
                <div id="group_div" style="padding-bottom:20px;">
                    <div class="control-group">
                        <label for="quote_vendors" class="optional control-label">Choose Item</label>
                        <div class="controls">
                            <select name="quote_item" id="quote_item">
                                <option value=""></option>
                            </select>
                            <%#= select_tag :quote_item, options_for_select([[ , ""] ])%>
                        </div>
                    </div>
                </div> -->
           

            <div class="control-group autocomplete required so_line_po">
                <label for="so_line_item_alt_name_id" class="autocomplete required control-label">
                    <abbr title="required"></abbr> Vendor po
                </label>
                <div class="controls">
                    <span role="status" aria-live="polite" class="ui-helper-hidden-accessible"></span>
                    <input type="text" size="30"  name="so_line[po]" id="so_line_po" data-id-element="#so_line_po"  class="autocomplete required ui-autocomplete-input" autocomplete="off"></div>
            </div>

            <%= hidden_field_tag :po_header_id, (@so_line.po_header.id if @so_line.po_header) %>

            <%= hidden_field_tag :org_po_header_id, (@so_line.po_header.id if @so_line.po_header) %>




         
                


                <%= f.input :so_line_notes, :label => "Notes" %>

                <%= f.input :so_line_price, :label => "Total", :disabled => true, input_html: { class: 'special_font' }, :as => :hidden %>

                <div class="separator bottom"></div>
          
                <div class="actions">
                    <%= f.submit "ADD", :class =>"btn" %>
                    <%= link_to 'Delete', so_header_so_line_path(@so_header, @so_line), method: :delete, data: { confirm: 'Are you sure?' }, :class => "btn" unless @so_line.new_record? %>
                    <%= link_to 'SAVE', so_header_path(@so_header), :class =>"btn" %>
               </div>
            <% end %>
        </div>


    <div class="separator bottom"></div>
        <div class="span8">
            <%= render :partial => 'so_lines/line_items' %>
        </div>
    </div>

<% end %>


<script type="text/javascript">
    tab_field_forms["form_for_so_line"] = ["so_line_item_alt_name_id", "so_line_so_line_cost", "so_line_so_line_sell", "so_line_so_line_quantity", "so_line_organization_id", "so_line_po", "so_line_so_line_notes"];

    $(document).ready(function(){  
        $('#so_line_po').val('<%= @so_line.po%>');

        $('#alt_name_id').val('<%= @so_line.item_alt_name_id  %>');



        $('#so_line_so_line_sell').keydown(function(e) {
            var code = e.keyCode || e.which;

            if (code === 9 || code ===13 ) {  
                $('#so_line_so_line_quantity').val("");
            }
        });    
        $('#so_line_item_alt_name_id').keydown(function(e) {
            var code = e.keyCode || e.which;

            if (code === 9 || code ===13) {  
                $('#so_line_item_alt_name_id').val($( "#ui-id-1 li a" ).first().html());  
                initialize_api_call({"url": "/common_actions/get_info", "type": "GET", "data_type": "json", "params": {"mode": "get_alt_name", "value": $('#so_line_item_alt_name_id').val()}}, "get_alt_name_id", {}); 

            }
        }); 
        $('#so_line_po').keydown(function(e) {
            var code = e.keyCode || e.which;

            if (code === 9 || code ===13) {  
                set_first_auto_val($(this).attr('id'), $(this).data('ui-autocomplete'));
                get_vendor_po
            }
        }); 
          
        $('#so_line_organization_id').keydown(function(e) {
            var code = e.keyCode || e.which;
            if (code === 9 || code ===13) {  
                set_first_auto_val($(this).attr('id'), $(this).data('ui-autocomplete'));
                initialize_api_call({"url": "/common_actions/get_info", "type": "GET", "data_type": "json", "params": {"mode": "get_org", "so_value": $('#so_line_organization_id').val()}}, "set_vendor", {}); 
            }
        });  

        $("#so_line_so_line_cost").change(function(){
            calculate_line_item_total();
        });

        $("#so_line_so_line_cost").on("input", function(){
            calculate_line_item_total();
        });

        $("#so_line_so_line_quantity").on("input", function(){
            calculate_line_item_total();
        });

        $("#so_line_so_line_freight").on("input", function(){
            calculate_line_item_total();
        });
        <% if @so_line.new_record? %>
            $("#so_line_item_alt_name_id").on("focusout", function(){
                if($("#alt_name_id").val() != "")

                    initiate_item_revisions($("#alt_name_id").val());
                else if($("#org_alt_name_id").val() != "")
                    initiate_item_revisions($("#org_alt_name_id").val());

                else{
                    $("#so_line_so_line_cost").val("");
                    calculate_line_item_total();
                }
            });
        <% else %>   
            $("#so_line_item_alt_name_id").on("focusout", function(){
         
                if($("#alt_name_id").val() != "")
                    initiate_item_revisions($("#alt_name_id").val());
                else if($("#org_alt_name_id").val() != "")
                    initiate_item_revisions($("#org_alt_name_id").val());
                else{
                    $("#so_line_so_line_cost").val("");
                        calculate_line_item_total();
                    }
            });

        <% end %>

        $("#so_line_item_revision_id").on('change', function() {
            initiate_so_line_cost();
        });

        $("#so_line_organization_id").val("<%= @so_line.organization.organization_name if @so_line.organization %>");

        $("#so_line_item_alt_name_id").val("<%= @so_line.item_alt_name.alt_item_name if @so_line.item_alt_name %>");

        $("#so_line_item_alt_name_id").focus();

        $("#so_line_organization_id").focusout(function(){
            // get_vendor_po();
        });
        $("#so_line_item_alt_name_id").focusout(function(){
            // get_vendor_po();
        });

        $("#so_line_po").focusout(function(){
             get_po_identifier();
        });
        $('#so_line_so_line_cost').val('<%= @so_line.so_line_cost if @so_line %>');
        if($("#alt_name_id").val() != "")
            initiate_item_revisions($("#alt_name_id").val());
        else if($("#org_alt_name_id").val() != "")
            initiate_item_revisions($("#org_alt_name_id").val());
        else{
        $("#so_line_so_line_cost").val("");
            calculate_line_item_total();
        }

        get_vendor_po();
    });  

    function initiate_item_revisions(item_alt_name_id){
        $("#so_line_item_revision_id").html("");

        if($("#alt_name_id").val() != "" && $("#alt_name_id").val() != null)
          initialize_api_call({"url": "/common_actions/get_info", "type": "GET", "data_type": "json", "params": {"mode": "get_item_revisions", "id": item_alt_name_id}}, "set_item_revisions", {});
        else{

              page_initial = false;
        }  
    }
    function set_item_revisions(response, callback_params, api_params){
        var html = $.trim(Mustache.render($(".revision-select-box-template").html(), response));
        $("#so_line_item_revision_id").html(html);
         set_val_selectbox();
         initiate_so_line_cost();
    }

    function set_val_selectbox(){

      var theText = "<%= @so_line.item_revision.item_revision_name if @so_line.item_revision %>";
      $("#so_line_item_revision_id option").each(function() {
        if($(this).text() == theText) {
          $(this).attr('selected', 'selected');            
        }                        
      });


    }

    function initiate_so_line_cost(){
        if($("#so_line_item_revision_id").val() != "" && $("#so_line_item_revision_id").val() != null)
          initialize_api_call({"url": "/common_actions/get_info", "type": "GET", "data_type": "json", "params": {"mode": "get_item_revision_cost", "id": $("#so_line_item_revision_id").val()}}, "set_item_revision_cost", {});
        else{
            page_initial = false;
        }
    }  

    function set_item_revision_cost(response, callback_params, api_params){
      $("#so_line_so_line_cost").val(response.aaData.item_cost);
      page_initial = false;
    }
    function sset_item_revision_cost(response, callback_params, api_params)
    {

        $("#so_line_so_line_cost").val(response.aaData.item_cost);
        if(response.item_sell) 
            $("#so_line_so_line_sell").val(response.aaData.item_sell);
        calculate_line_item_total();
        return false;
    }
    function get_alt_name_id(response){
        var alt_id_val = JSON.stringify(response.aaData.id);
        $("#alt_name_id").val(alt_id_val);
    }
    function calculate_line_item_total(){
        var so_line_total = parseFloat($("#so_line_so_line_cost").val()) * parseFloat($("#so_line_so_line_quantity").val());
        
        so_line_total = Math.round(so_line_total * 10000000000) / 10000000000;

        if(isNaN(so_line_total) == false)
            $("#so_line_so_line_price").val(so_line_total); //.toFixed(10)
        else
            $("#so_line_so_line_price").val("");
    }


    function get_po_identifier()
    {
        initialize_api_call({"url": "/common_actions/get_info", "type": "GET", "data_type": "json", "params": {"mode": "get_po_header", "po_identifier": $('#so_line_po').val()}}, "set_po_identifier", {}); 
    }
    function set_po_identifier(response)
    {
        $('#po_header_id').val(response.aaData);
    }
    function get_vendor_po(){
     $("#so_line_po").on('change keyup paste', function(){
        var x= $(this).val();
        var alt_name_val_id  = '';

        if($('#alt_name_id').val() === ''){
           
           alt_name_val_id = $('#alt_name_id').val('<%= @so_line.item_alt_name_id  %>')
        }
        else{
            alt_name_val_id = $('#alt_name_id').val();

        }




    $.ajax(
    {
        url: '/auto_complete',
        data: {'term':x,"organization_id": $('#organization_id').val(), "alt_name_id": alt_name_val_id},
        minLength: 3,
        type: "get",
        dataType: "json",
        success: function(data) 
        {
          
            if (data != "") 
            {
                var cus_details = [];
                for (i in data) 
                {
                    for (k in data[i]) 
                    {
                        // cus_details.push(data[i][k]);
                            if($.inArray(data[i][k], cus_details) === -1) cus_details.push(data[i][k]);

                    }
                }
                $('#so_line_po').autocomplete({ source: cus_details });
            }
       
        }

    });




  
  });
    }
    function set_vendor_po(response, callback_params, api_params){
        var dataArr = response["aaData"];

        $('#so_line_so_line_vendor_po option').remove();   

        $.each(dataArr, function(i){
            $('#so_line_so_line_vendor_po').append($("<option></option>")
                            .attr("value",dataArr[i]['po_identifier'])
                            .text(dataArr[i]['po_identifier']));
        });        
    }
    function set_vendor(response)
    {
        $('#organization_id').val(response.aaData['id']);
    }
    function set_first_auto_val(id_val,menu_data){
            var widget = menu_data,
                menu   = widget.menu,
                $ul    = menu.element,
                id     = $ul.attr('id'); // or $ul[0].id
                $('#'+id_val).val($( "#"+id+" li a" ).first().html());  
    }

</script>

<style> 

.autocomplete {
    width: 98%;
}

.numeric{
    width: 95%;
}

.controls > select {
    width: 102%;
}
.controls textarea {
    width: 92%;
}

.odd td {
    padding: 2px 10px !important;
}

@media all and (min-width: 800px) and (max-width: 1024px) {

.row-fluid .span4 {
    width: auto;
}
.row-fluid .span8 {
    width: auto;
}


.sorting {
    padding: 0 !important;
}

}
</style>

  <%= render :partial => 'layouts/app_layouts/mustache_templates', locals: {type: "revision-select-box"} %>


