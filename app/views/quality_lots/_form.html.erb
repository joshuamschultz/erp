<% if params[:lot_shelf] && @quality_lot.persisted? %>
    <%= simple_form_for(@quality_lot, :html => {:id => "form_for_lots", :class => "form-horizontal"}) do |f| %>
        <%= f.error_notification %>
        <div class="form-inputs"> 
            <%= hidden_field_tag :lot_shelf, true %>
            <%= f.input :lot_shelf_number, label: "Shelf", :autofocus => true %>
            <%= f.input :lot_shelf_unit, label: "Unit" %>
        </div>

        <div class="separator bottom"></div>

        <div class="form-actions">
            <%= f.button :submit, :class => 'btn' %>
            <%= link_to 'Back', quality_lots_path, :class => "btn" %>
        </div>

    <% end %>

    <script type="text/javascript">
        tab_field_forms["form_for_lots"] = ["quality_lot_lot_shelf_number", "quality_lot_lot_shelf_unit"];
    </script>

<% else %>

    <%= simple_form_for(@quality_lot, :html => {:id => "form_for_lots", :class => "form-horizontal"}) do |f| %>
      <%= f.error_notification %>

      <div class="form-inputs">
        <%#= f.association :po_header, label_method: :po_identifier, label_value: :id, label: "PO", :autofocus => true, :include_blank => false %>

        <%= f.association :po_header, :url => autocomplete_po_header_po_identifier_po_headers_path, :as => :autocomplete, :id_element => '#po_header_id', required: true, :label => "PO" if @quality_lot.new_record? %>

        <%= f.input :po_header_id, :disabled => true, input_html: { class: 'special_font' } unless @quality_lot.new_record? %>

        <%= hidden_field_tag :po_header_id, (@quality_lot.po_header.id if @quality_lot.po_header) %>

        <%= hidden_field_tag :org_po_header_id, (@quality_lot.po_header.id if @quality_lot.po_header) %>

          <%#= f.association :po_line, label_method: :po_line_item_name, label_value: :id, label: "Item", :autofocus => true, :include_blank => false %>

          <div class="control-group select required quality_lot_po_line">
                <label for="quality_lot_po_line_id" class="select required control-label">
                    <abbr title="required">*</abbr> Item
                </label>
                <div class="controls">
                    <select name="quality_lot[po_line_id]" id="quality_lot_po_line_id" class="select required" autofocus="autofocus">

                    </select>
                </div>
          </div>

          <div class="control-group select required quality_lot_item_revision">
                <label for="quality_lot_item_revision_id" class="select required control-label">
                    <abbr title="required">*</abbr> Item revision
                </label>
                <div class="controls">
                    <select required="required" name="quality_lot[item_revision_id]" id="quality_lot_item_revision_id" class="select required">

                    </select>
                </div>
          </div>

          <%#= f.input :lot_control_no, label: "Control No" %>

          <%= f.input :lot_quantity, label: "Quantity" %>

          <%= f.association :inspection_level, label_method: :type_name, label_value: :id, label: "Inspection Level", :include_blank => false %>

          <%= f.association :inspection_method, label_method: :type_name, label_value: :id, label: "Inspection Method", :include_blank => false %>

          <%= f.association :inspection_type, label_method: :type_name, label_value: :id, label: "Inspection Type", :include_blank => false %>

          <%= f.input :lot_aql_no, label: "AQL No" %>

          <%= f.association :process_flow, :url => autocomplete_process_flow_process_name_process_flows_path, :as => :autocomplete, :id_element => '#process_flow_id', :label => "Process Flow" %>

          <%= hidden_field_tag :process_flow_id, (@quality_lot.process_flow_id if @quality_lot.process_flow) %>

          <%= hidden_field_tag :org_process_flow_id, (@quality_lot.process_flow_id if @quality_lot.process_flow) %>

          <%= f.association :fmea_type, :url => autocomplete_fmea_type_fmea_name_fmea_types_path, :as => :autocomplete, :id_element => '#fmea_type_id', :label => "FMEA" %>

          <%= hidden_field_tag :fmea_type_id, (@quality_lot.fmea_type_id if @quality_lot.fmea_type) %>

          <%= hidden_field_tag :org_fmea_type_id, (@quality_lot.fmea_type_id if @quality_lot.fmea_type) %>

          <%= f.association :control_plan, :url => autocomplete_control_plan_plan_name_control_plans_path, :as => :autocomplete, :id_element => '#control_plan_id', :label => "Control Plan" %>

          <%= hidden_field_tag :control_plan_id, (@quality_lot.control_plan_id if @quality_lot.control_plan) %>

          <%= hidden_field_tag :org_control_plan_id, (@quality_lot.control_plan_id if @quality_lot.control_plan) %>

          <%= f.input :lot_finalized_at, as: :string, label: "Finalized At" %>

          <%= f.input :lot_notes, label: "Notes" %>

          <%#= f.input :lot_active, label: "Active" %>
      </div>

      <div class="separator bottom"></div>

      <div class="form-actions">
          <%= f.button :submit, :class => 'btn' %>
          <%= link_to 'Delete', quality_lot_path(@quality_lot), method: :delete, data: { confirm: 'Are you sure?' }, :class => "btn" unless @quality_lot.new_record? %>
          <%= link_to 'Back', quality_lots_path, :class => "btn" %>
      </div>
    <% end %>

  <script type="text/javascript">
    tab_field_forms["form_for_lots"] = ["quality_lot_po_header_id", "quality_lot_po_line_id", "quality_lot_item_revision_id", "quality_lot_lot_quantity", "quality_lot_inspection_level_id", "quality_lot_inspection_method_id", "quality_lot_inspection_type_id", "quality_lot_lot_aql_no", "quality_lot_process_flow_id", "quality_lot_fmea_type_id", "quality_lot_control_plan_id", "quality_lot_lot_finalized_at", "quality_lot_lot_notes"];

    <% date_box_date = @quality_lot.new_record? ? Date.today : @quality_lot.lot_finalized_at %>

    date_box_fields = date_box_fields.concat([{"name":"quality_lot_lot_finalized_at", "value":"<%= date_box_date %>"}]);

    var page_initial = true;

    $(document).ready(function(){ 
        $("#quality_lot_po_header_id").change(function(){
            initiate_line_items();
        });

        $("#quality_lot_po_line_id").change(function(){
            initiate_line_revisions();
        });

        $("#quality_lot_process_flow_id").val("<%= @quality_lot.process_flow.process_name if @quality_lot.process_flow %>");

        $("#quality_lot_fmea_type_id").val("<%= @quality_lot.fmea_type.fmea_name if @quality_lot.fmea_type %>");

        $("#quality_lot_control_plan_id").val("<%= @quality_lot.control_plan._plan_name if @quality_lot.control_plan %>");   

        $("#quality_lot_po_header_id").val("<%= @quality_lot.po_header.po_identifier if @quality_lot.po_header %>");
        
        // $("#quality_lot_po_header_id").val("<%#= @quality_lot.po_header_id %>");

        initiate_line_items();

        $("#quality_lot_po_header_id").focus();
    });

    function initiate_line_items(){
        if($("#po_header_id").val() != "" && $("#po_header_id").val() != null)
          initialize_api_call({"url": "/common_actions/get_info", "type": "GET", "data_type": "json", "params": {"mode": "po_header_items", "id": $("#po_header_id").val()}}, "set_po_header_items", {});
        else{
              $("#quality_lot_po_line_id").html("");
              $("#quality_lot_item_revision_id").html("");
              page_initial = false;
        }  
    }

    function set_po_header_items(response, callback_params, api_params){
        var html = $.trim(Mustache.render($(".line-item-select-box-template").html(), response));
        $("#quality_lot_po_line_id").html(html);
        <% unless @quality_lot.new_record? %>
          if(page_initial == true)
              $("#quality_lot_po_line_id").val("<%= @quality_lot.po_line_id %>");
        <% end %>
        initiate_line_revisions();
    }

    function initiate_line_revisions(){
        if($("#quality_lot_po_line_id").val() != "" && $("#quality_lot_po_line_id").val() != null)
          initialize_api_call({"url": "/common_actions/get_info", "type": "GET", "data_type": "json", "params": {"mode": "po_line_revisions", "id": $("#quality_lot_po_line_id").val()}}, "set_po_line_revisions", {});
        else{
            $("#quality_lot_item_revision_id").html("");
            page_initial = false;
        }
    }  

    function set_po_line_revisions(response, callback_params, api_params){
        var html = $.trim(Mustache.render($(".revision-select-box-template").html(), response));
        $("#quality_lot_item_revision_id").html(html);
        <% unless @quality_lot.new_record? %>
          if(page_initial == true)  
              $("#quality_lot_item_revision_id").val("<%= @quality_lot.item_revision_id %>");
        <% end %>

        page_initial = false;
    }  

  </script>

  <%= render :partial => 'layouts/app_layouts/mustache_templates', locals: {type: "revision-select-box"} %>
  <%= render :partial => 'layouts/app_layouts/mustache_templates', locals: {type: "line-item-select-box"} %>

<% end %>