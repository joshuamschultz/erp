<%= simple_form_for(@receivable, :html => {:id => "form_for_receivables",:class => "form-horizontal"}) do |f| %>
<div class="row-fluid">
  <% if @receivable.persisted? %>
        <%= render :partial => 'receivables/receivable_info' %>
  <% else %>
        <div class="span4 well item_detail_view">
            <div id="receivable_customer_info"></div>
        </div>
  <% end %>  

  <div class="span8 well item_detail_view">

  <%= f.error_notification %>

  <div class="form-inputs">
    <div class="control-group select optional receivable_receivable_to_address">
    <% if @receivable.persisted? %>
        <%= f.label :Customer %>
         <div class="controls">
        <%= f.text_field :organization_id, :readonly => true, input_html: { class: 'special_font' } %>
    </div>
    <% else %>
        <%= f.association :organization, :url => autocomplete_organization_organization_name_organizations_path(), :as => :autocomplete, :id_element => '#organization_id', required: true, :label => "Customer" %>
    <% end %>
    <%= hidden_field_tag :organization_id, (@receivable.organization.id if @receivable.organization) %>
    <%= hidden_field_tag :org_organization_id, (@receivable.organization.id if @receivable.organization) %>
    <%= hidden_field_tag :receivable_id, @receivable.id %>
    </div>

    <div class="control-group select optional receivable_receivable_to_address">
    <% if @receivable.so_header %>
        <%= f.label :SO %>
         <div class="controls">
        <%= f.text_field :so_header_id, :disabled => true, input_html: { class: 'special_font' }%>          
        <%= hidden_field_tag :so_header_id, @receivable.so_header.id %>
        <%= hidden_field_tag :org_so_header_id, @receivable.so_header.id %>
        </div>
    <% end %>
    </div>
    

    <%#= f.association :gl_account, :url => autocomplete_gl_account_gl_account_title_gl_accounts_path, :as => :autocomplete, :id_element => '#gl_account_id', :label => "GL Account" %>
    <%#= hidden_field_tag :gl_account_id, (@receivable.gl_account_id if @receivable.gl_account) %>
    <%#= hidden_field_tag :org_gl_account_id, (@receivable.gl_account_id if @receivable.gl_account) %>

    <%= f.input :receivable_notes, :label => "Notes" %>   
    <%= f.input :receivable_freight, :input_html => { :class => 'commoncls', :min => 0, :step => 'any'}, :label => "Freight" %>
  </div>

  
  <div class="separator bottom"></div>
  
  <div class="form-actions">
    <%= f.button :submit, 'Create Invoice' if @receivable.new_record? %>
    <%= f.button :submit, 'Update Invoice', :id =>'update_invoice'  unless @receivable.new_record? %>
    <%= link_to 'Invoice', '/receivables', :class => "btn" %>
    <%= link_to 'Delete', receivable_path(@receivable), method: :delete, data: { confirm: 'Are you sure?' }, :class => "btn" unless @receivable.new_record? %>    
  </div>
</div>
</div>

<%= render :partial => 'receivables/so_shipments' if @so_header %>

<%= render :partial => 'receivable_lines/line_items' if @receivable.persisted? && @receivable.so_header.nil? %>

<div class="separator bottom"></div>
<div class="separator bottom"></div>

<% if @receivable.persisted? %>
    <% receivable_accounts = @receivable.receivable_accounts.any? ? @receivable.receivable_accounts : [ReceivableAccount.new]*0 %>
    <% gl_accounts = GlAccount.order(:gl_account_title) %>
    <%= render :partial => 'layouts/app_layouts/accounts', locals: {f: f, object: @receivable, fields: [:receivable_accounts, :gl_account, :receivable_account_description, :receivable_account_amount], accounts: receivable_accounts, gl_accounts: gl_accounts, form_name: "form_for_receivables", default_account: (GlAccount.find_by_gl_account_identifier("11050") || GlAccount.first), account_type: "receivable"} %>
<% end %>
<% end %>

<script type="text/javascript">
    tab_field_forms["form_for_receivables"] = ["receivable_organization_id", "receivable_receivable_notes", "receivable_receivable_discount", "receivable_receivable_freight"];

    var receivable_fine_to_submit = true;

    $(document).ready(function(){  
        $('#receivable_receivable_notes').keydown(function(e) {
            var code = e.keyCode || e.which;
            if (code ===13 ) {  
                $('#receivable_receivable_freight').select();
            }
        });  
    $("#accounts_dispersal_table").hide();
    $("#hide_me").hide();
        // $("#receivable_receivable_discount " ).on("focusout", function(){
        //   $("#update_invoice").attr('disabled',true);  
        //  });   
        $("#receivable_receivable_freight" ).on("focusout", function(){
          freight_result(); 
         });   
        $("#receivable_organization_id").on("focusout", function(){
            if($("#organization_id").val() != "" && $("#organization_id").val() != undefined){
                initialize_api_call({"url": "/organizations/" + $("#organization_id").val() + "/organization_info", "type": "GET", "params": {}}, "set_customer_info", {});
            }
            else{
                $("#receivable_customer_info").html("");
            }
        });

        <% unless @receivable.nil? %>
            $("#receivable_so_header_id").val("<%= @receivable.so_header.so_identifier if @receivable.so_header %>");

            $("#receivable_organization_id").val("<%= @receivable.organization.organization_name if @receivable.organization %>");

            $("#receivable_gl_account_id").val("<%= @receivable.gl_account.gl_account_title if @receivable.gl_account %>");
        <% end %>

        $(document).on("keydown", ".receivable_shipment_count", function(e){
            receivable_fine_to_submit = true;
            receivable_fine_to_submit = table_row_next_focus(e, "#form_for_receivables", $(this), ".receivable_shipment_count", true);
        });

        $("#form_for_receivables").submit(function(e){
            if(receivable_fine_to_submit == false)
                e.preventDefault();
            else
                receivable_fine_to_submit = true;
        });
        $('#receivable_organization_id').on('autocompletechange change', function ()
         { 
            selected_val = this.value 
            matched = 0
            $( "#ui-id-1 li a" ).each(function() {
            if($( this ).html() ==  selected_val)
              {                    
               initialize_api_call({"url": "/common_actions/get_info", "type": "GET", "data_type": "json", "params": {"mode": "get_org", "so_value": selected_val}}, "get_org_id", {}); 
                matched = 1;
              }

            });
            
            if(matched == 0)
              {        
                $('#receivable_organization_id').val($( "#ui-id-1 li a" ).first().html());
                initialize_api_call({"url": "/common_actions/get_info", "type": "GET", "data_type": "json", "params": {"mode": "get_org", "so_value": $('#receivable_organization_id').val()}}, "get_org_id", {}); 
              }    
          }).change();

        // $('#receivable_organization_id').keydown(function(e) {
        //     var code = e.keyCode || e.which;
        //     if (code === 9 || code ===13 ) 
        //     {                  
        //         $('#receivable_organization_id').val($( "#ui-id-1 li a" ).first().html());
        //         initialize_api_call({"url": "/common_actions/get_info", "type": "GET", "data_type": "json", "params": {"mode": "get_org", "so_value": $('#receivable_organization_id').val()}}, "get_org_id", {}); 
        //     }
        // }); 
    });

    function set_customer_info(response, callback_params, api_params){
        $("#receivable_customer_info").html(response);
        return false;
    }

    function update()
    {
      // add_freight ();
      freight_result();
      // add_discount ();
      discount_result();

      $("#update_invoice").attr('disabled',false);          
    } 
     function get_rowcount(){
        var $last = ($('#accounts_dispersal_table').find('tbody tr:last'));        
        var last_id = $last.children('td:first').children().find('select').attr('id');
        if(typeof last_id != 'undefined')    
        {
            var getNum = last_id.match(/(\d+)/g);  
            getNum = parseInt(getNum);  
            return (getNum+1);
        }
        else
        {
          return  0;
        }
    }   
    function add_freight () {        
        var receivableId =  $("#receivable_id").val(); 
        var freightAmt = $("#receivable_receivable_freight").val();        
        initialize_api_call({"url": "/common_actions/get_info", "type": "GET", "data_type": "json", "params": {"mode": "add_or_update_receivable_freight", "receivable_id" : receivableId, "freight_amt": freightAmt }}, "freight_result", {});
            // body...
        } 

    function  freight_result ()     
    {
        var theText = $("#freight_text").val();
        var account_row_count = get_rowcount();    
        for ( var i = 0; i < account_row_count; i++ ) {             
            if ($("#receivable_receivable_accounts_attributes_"+i+"_gl_account_id option:selected").text() == theText)
                {
                    if($("#receivable_receivable_freight").val() >= 0){
                        $("#receivable_receivable_accounts_attributes_"+i+"_receivable_account_amount").val($("#receivable_receivable_freight").val() * -1);
                    }
                    else{
                        $("#receivable_receivable_accounts_attributes_"+i+"_receivable_account_amount").closest("tr").remove();   
                    }    
                    break;
                } 
        }
        if(i ==account_row_count && $("#receivable_receivable_freight").val() > 0 && $("#receivable_receivable_accounts_attributes_"+account_row_count+"_receivable_account_amount").length == 0){
            var html = $.trim(Mustache.render($(".account-row-html-template").html(), {"row_count" : account_row_count, "row_data" : []}));
            $("#accounts_dispersal_table_body").append(html); 
            $("#receivable_receivable_accounts_attributes_"+account_row_count+"_gl_account_id").html(account_select_html);            
            $("#receivable_receivable_accounts_attributes_"+account_row_count+"_gl_account_id option").each(function() {
                if($(this).text() == theText) {
                    $(this).attr('selected', 'selected');            
                }                        
            });
            if($("#receivable_receivable_freight").val() > 0){
            $("#receivable_receivable_accounts_attributes_"+account_row_count+"_receivable_account_amount").val($("#receivable_receivable_freight").val() * -1);
             $("#receivable_receivable_accounts_attributes_"+i+"_receivable_account_amount").closest("tr").hide();  
            }
        }         
    }
    function add_discount () {
        var receivableId =  $("#receivable_id").val(); 
        var discount = $("#receivable_receivable_discount").val();   
          
        initialize_api_call({"url": "/common_actions/get_info", "type": "GET", "data_type": "json", "params": {"mode": "add_or_update_receivable_discount", "receivable_id" : receivableId, "discount": discount  }}, "discount_result", {});
            // body...
        } 

    function  discount_result ()     
    {
        var theText = $("#sales_discount_text").val();
        var theSalesText = $("#sales_text").val();
        var account_row_count = get_rowcount();         
        var discount_val = ($("#receivable_cost").val() /100 * $("#receivable_receivable_discount").val()) * -1;        
        for ( var i = 0; i < account_row_count; i++ ) {             
            if ($("#receivable_receivable_accounts_attributes_"+i+"_gl_account_id option:selected").text() == theText)
                {                    
                    if($("#receivable_receivable_discount").val() > 0)
                    {                   
                        $("#receivable_receivable_accounts_attributes_"+i+"_receivable_account_amount").val(discount_val);
                    }
                    else{
                        $("#receivable_receivable_accounts_attributes_"+i+"_receivable_account_amount").closest("tr").remove();    
                    }   
                    break;
                } 
        }        
        if(i ==account_row_count && $("#receivable_receivable_discount").val() > 0 && $("#receivable_receivable_accounts_attributes_"+account_row_count+"_receivable_account_amount").length == 0){            
            var html = $.trim(Mustache.render($(".account-row-html-template").html(), {"row_count" : account_row_count, "row_data" : []}));
            $("#accounts_dispersal_table_body").append(html); 
            $("#receivable_receivable_accounts_attributes_"+account_row_count+"_gl_account_id").html(account_select_html);            
            $("#receivable_receivable_accounts_attributes_"+account_row_count+"_gl_account_id option").each(function() {
                if($(this).text() == theText) {
                    $(this).attr('selected', 'selected');            
                }                        
            });
            if($("#receivable_receivable_discount").val() > 0){
                $("#receivable_receivable_accounts_attributes_"+account_row_count+"_receivable_account_amount").val(discount_val);
            }    
        }
        // for ( var i = 0; i < account_row_count; i++ ) {                 
        //     if ($("#receivable_receivable_accounts_attributes_"+i+"_gl_account_id option:selected").text() == theSalesText) {                
        //         var sales_val = parseFloat($("#receivable_sales").val()) + parseFloat(discount_val);                
        //         $("#receivable_receivable_accounts_attributes_"+i+"_receivable_account_amount").val(sales_val); 
        //     }
        // }
        
    }

    function get_org_id(response){
       var org_id_val = JSON.stringify(response.aaData.id);
       initialize_api_call({"url": "/organizations/" + org_id_val + "/organization_info", "type": "GET", "params": {}}, "set_customer_info", {});
    }
</script>

<%= render :partial => 'layouts/app_layouts/mustache_templates', locals: {type: "address-select-box"} %>

<div class="separator bottom"></div>

<%# @so_header = @receivable.so_header if @receivable.persisted? %>

<%#= render :partial => 'so_lines/line_items' if @so_header %>