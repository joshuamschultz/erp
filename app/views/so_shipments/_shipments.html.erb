<!-- Widget -->
<div class="widget">
    <!-- Widget heading -->
    <div class="widget-head">
        <div class="row-fluid">
            <h4 class="span6 heading">Shipped<%= " - History" if (shipment_type == "history") %></h4>
            <span class="span6 heading right">
                <%#= link_to 'New Shipment', new_so_shipment_path, :class => "btn btn-mini btn-success" %>
                
                <%#= link_to 'Create Receivable', "#", class: "btn btn-mini btn-success", onclick: "create_receivable_for_items(); return false;" if create_receivable %>

                <%= link_to 'Received - History', po_shipments_path(type: "history"), class: "btn btn-mini btn-success" if (shipment_type == "history") %>
            </span>
        </div> 
    </div>
    <!-- // Widget heading END -->

    <div class="widget-body">
        <table id="so_shipment_table_report" class="dynamicTable table table-striped table-bordered table-condensed">
            <thead>
              <tr>                
                <th>Part No</th>
                <th>SO</th>
                <th>Vendor</th>
                <th>Quantity Ordered</th>
                <!-- <th>Total Shipped</th> -->
                <th>Quantity Shipped</th>
                <th>Shipped At</th>
                <th></th>
              </tr>
            </thead>

            <tbody>
                
            </tbody>
        </table>
    </div>
</div>

<%= render :partial => 'layouts/app_layouts/data_table', :locals => 
    {
        :name => "so_shipment_table_report", :path => so_shipments_path(type: shipment_type, item_id: (@item.id if @item), create_receivable: (create_receivable if create_receivable)), :extras => {:slno => false}, 
        :columns => '[
                        { "mData": "item_part_no" },
                        { "mData": "so_identifier" },                        
                        { "mData": "vendor_name" },
                        { "mData": "so_line_quantity" },                        
                        { "mData": "so_shipped_count" },
                        { "mData": "so_shipped_date" },
                        { "mData": "links", "bSortable": false, "bSearchable": false }  
                    ]'
    } 
%>

<!-- { "mData": "so_line_quantity_shipped" }, -->

<script type="text/javascript">
    $(document).on("change", ".receivable_so_lines", function(){
        if(this.checked){
            disable_other_so_items($(this).attr("class"));
        }
    });

    function disable_other_so_items(except_so_class){
        $(".receivable_so_lines").each(function(){
            if($(this).attr("class") != except_so_class){
                $(this).attr("checked", false);
            }
        });
    }

    function create_receivable_for_items(){
        var selected_receivable_so_lines = $(".receivable_so_lines:checked");
        if(selected_receivable_so_lines.length == 0)
            alert("Please select items in any SO.")
        else{
            var selected_shipments = $(".receivable_so_lines:checked").map(function(){
                return $(this).val();
            }).get();

            initialize_api_call({"url": "/receivables", "type": "POST", "data_type": "json", "params": {"mode": "create_receivable", "shipments": selected_shipments}}, "redirect_to_receivable", {});
        }
    }

    function redirect_to_receivable(response, callback_params, api_params){
        if(response.id){
            window.location = "/receivables/" + response.id + "/edit";
        }
    }
</script>